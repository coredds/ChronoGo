name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Build binaries
      run: |
        mkdir -p dist
        # Build demo binary for multiple platforms
        GOOS=linux GOARCH=amd64 go build -o dist/chrono-demo-linux-amd64 ./cmd/chrono-demo
        GOOS=linux GOARCH=arm64 go build -o dist/chrono-demo-linux-arm64 ./cmd/chrono-demo
        GOOS=windows GOARCH=amd64 go build -o dist/chrono-demo-windows-amd64.exe ./cmd/chrono-demo
        GOOS=darwin GOARCH=amd64 go build -o dist/chrono-demo-darwin-amd64 ./cmd/chrono-demo
        GOOS=darwin GOARCH=arm64 go build -o dist/chrono-demo-darwin-arm64 ./cmd/chrono-demo
    
    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog (basic version - you can enhance this)
        if [ -f CHANGELOG.md ]; then
          # Extract changes for this version from CHANGELOG.md
          awk "/^## \[$VERSION\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
        else
          echo "Release $VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "See commit history for details." >> release_notes.md
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
