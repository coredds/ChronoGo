name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.4.1)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Validate version format
      run: |
        if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
          echo "Error: Version must be in format vX.Y.Z or vX.Y.Z-suffix"
          exit 1
        fi
    
    - name: Check if tag exists
      run: |
        if git rev-parse "${{ github.event.inputs.version }}" >/dev/null 2>&1; then
          echo "Error: Tag ${{ github.event.inputs.version }} already exists"
          exit 1
        fi
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test -v -race ./...
    
    - name: Run linting
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m
    
    - name: Create and push tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "${{ github.event.inputs.version }}" -m "Release ${{ github.event.inputs.version }}"
        git push origin "${{ github.event.inputs.version }}"
    
    - name: Build binaries
      run: |
        mkdir -p dist
        # Build demo binary for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/chrono-demo-linux-amd64 ./cmd/chrono-demo
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/chrono-demo-linux-arm64 ./cmd/chrono-demo
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/chrono-demo-windows-amd64.exe ./cmd/chrono-demo
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/chrono-demo-darwin-amd64 ./cmd/chrono-demo
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/chrono-demo-darwin-arm64 ./cmd/chrono-demo
    
    - name: Generate checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
    
    - name: Generate changelog
      run: |
        VERSION="${{ github.event.inputs.version }}"
        
        # Generate changelog
        if [ -f CHANGELOG.md ]; then
          # Extract changes for this version from CHANGELOG.md
          awk "/^## \[${VERSION#v}\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          if [ ! -s release_notes.md ]; then
            echo "Release $VERSION" > release_notes.md
            echo "" >> release_notes.md
            echo "See [CHANGELOG.md](CHANGELOG.md) for detailed changes." >> release_notes.md
          fi
        else
          echo "Release $VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "See commit history for details." >> release_notes.md
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version }}
        files: |
          dist/*
        body_path: release_notes.md
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
        generate_release_notes: true
        make_latest: ${{ !github.event.inputs.prerelease }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
